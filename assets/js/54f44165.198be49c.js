"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{4575:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"Prerequisites","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/SBCore/docs/getting-started/installation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docSidebar","previous":{"title":"Getting Started","permalink":"/SBCore/docs/category/getting-started"}}');var i=r(4848),o=r(8453);const a={sidebar_position:1},s="Installation",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create the Project",id:"create-the-project",level:2},{value:"Add SBCore Dependencies",id:"add-sbcore-dependencies",level:2},{value:"Define the Parent POM",id:"define-the-parent-pom",level:2},{value:"Add SBCore Dependencies",id:"add-sbcore-dependencies-1",level:2},{value:"sbcore-starter",id:"sbcore-starter",level:3},{value:"sbcore-starter-provided",id:"sbcore-starter-provided",level:3},{value:"sbcore-starter-test",id:"sbcore-starter-test",level:3},{value:"Add Required Dependencies",id:"add-required-dependencies",level:2},{value:"Lombok",id:"lombok",level:3},{value:"MapStruct",id:"mapstruct",level:3},{value:"Database Driver",id:"database-driver",level:3},{value:"Spring Boot Starter Test and Spring Security Test",id:"spring-boot-starter-test-and-spring-security-test",level:3},{value:"Configure Build Plugins",id:"configure-build-plugins",level:2},{value:"Full Example <code>pom.xml</code>",id:"full-example-pomxml",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Ensure the following are installed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java 21"})," (or a newer version)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Maven"})," (for managing dependencies and building the project)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PostgreSQL"})," (or another database if required)"]}),"\n",(0,i.jsx)(n.li,{}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"create-the-project",children:"Create the Project"}),"\n",(0,i.jsx)(n.p,{children:"Ensure that you've created a Spring Boot project. You can generate a basic Spring Boot project using Spring Initializr."}),"\n",(0,i.jsx)(n.h2,{id:"add-sbcore-dependencies",children:"Add SBCore Dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["Since your project uses SBCore for job handling and code generation, we need to add the dependencies from the SBCore library to your ",(0,i.jsx)(n.code,{children:"pom.xml"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"define-the-parent-pom",children:"Define the Parent POM"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<parent>\n    <groupId>io.github.alishahidi.sbcore</groupId>\n    <artifactId>sbcore-parent</artifactId>\n    <version>{version}</version>\n</parent>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-sbcore-dependencies-1",children:"Add SBCore Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"We need to add three main dependencies:"}),"\n",(0,i.jsx)(n.h3,{id:"sbcore-starter",children:"sbcore-starter"}),"\n",(0,i.jsx)(n.p,{children:"The main library for job handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.github.alishahidi.sbcore</groupId>\n    <artifactId>sbcore-starter</artifactId>\n    <version>{version}</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sbcore-starter-provided",children:"sbcore-starter-provided"}),"\n",(0,i.jsx)(n.p,{children:"For additional provided functionalities."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.github.alishahidi.sbcore</groupId>\n    <artifactId>sbcore-starter-provided</artifactId>\n    <version>{version}</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sbcore-starter-test",children:"sbcore-starter-test"}),"\n",(0,i.jsx)(n.p,{children:"For testing purposes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>io.github.alishahidi.sbcore</groupId>\n    <artifactId>sbcore-starter-test</artifactId>\n    <version>{version}</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-required-dependencies",children:"Add Required Dependencies"}),"\n",(0,i.jsx)(n.h3,{id:"lombok",children:"Lombok"}),"\n",(0,i.jsx)(n.p,{children:"For reducing boilerplate code."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>{version}</version>\n    <optional>true</optional>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mapstruct",children:"MapStruct"}),"\n",(0,i.jsx)(n.p,{children:"For object-to-object mappings."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.mapstruct</groupId>\n    <artifactId>mapstruct</artifactId>\n    <version>{version}</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"database-driver",children:"Database Driver"}),"\n",(0,i.jsx)(n.p,{children:"For database interactions.  (Or anything you want)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.postgresql</groupId>\n    <artifactId>postgresql</artifactId>\n    <scope>runtime</scope>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"spring-boot-starter-test-and-spring-security-test",children:"Spring Boot Starter Test and Spring Security Test"}),"\n",(0,i.jsx)(n.p,{children:"For testing."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-test</artifactId>\n    <scope>test</scope>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-build-plugins",children:"Configure Build Plugins"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Spring Boot Maven Plugin"}),": To run and package the Spring Boot application."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Maven Compiler Plugin"}),": For setting the Java version and annotation processing."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<build>\n    <plugins>\n        <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n            <configuration>\n                <skip>false</skip>\n                <mainClass>{your.main.class}</mainClass>\n            </configuration>\n        </plugin>\n\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>{version}</version>\n            <configuration>\n                <source>{java.version}</source>\n                <target>{java.version}</target>\n                <parameters>true</parameters>\n                <annotationProcessorPaths>\n                    <path>\n                        <groupId>org.mapstruct</groupId>\n                        <artifactId>mapstruct-processor</artifactId>\n                        <version>{version}</version>\n                    </path>\n                    <path>\n                        <groupId>org.projectlombok</groupId>\n                        <artifactId>lombok</artifactId>\n                        <version>{version}</version>\n                    </path>\n                    <path>\n                        <groupId>org.projectlombok</groupId>\n                        <artifactId>lombok-mapstruct-binding</artifactId>\n                        <version>{version}</version>\n                    </path>\n                </annotationProcessorPaths>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"full-example-pomxml",children:["Full Example ",(0,i.jsx)(n.code,{children:"pom.xml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>io.github.alishahidi.sbcore</groupId>\n        <artifactId>sbcore-parent</artifactId>\n        <version>1.4.0</version>\n    </parent>\n\n    <groupId>com.example</groupId>\n    <artifactId>example</artifactId>\n    <version>v1.0.0</version>\n    <name>example</name>\n    <description>example</description>\n\n    <properties>\n        <java.version>21</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.github.alishahidi.sbcore</groupId>\n            <artifactId>sbcore-starter</artifactId>\n            <version>1.4.0</version>\n        </dependency>\n        <dependency>\n            <groupId>io.github.alishahidi.sbcore</groupId>\n            <artifactId>sbcore-starter-provided</artifactId>\n            <version>1.4.0</version>\n        </dependency>\n        <dependency>\n            <groupId>io.github.alishahidi.sbcore</groupId>\n            <artifactId>sbcore-starter-test</artifactId>\n            <version>1.4.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>1.18.24</version>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n            <version>1.5.0.Final</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <skip>false</skip>\n                    <mainClass>com.hami.contract.ContractApplication</mainClass>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>21</source>\n                    <target>21</target>\n                    <parameters>true</parameters>\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.mapstruct</groupId>\n                            <artifactId>mapstruct-processor</artifactId>\n                            <version>1.5.0.Final</version>\n                        </path>\n                        <path>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                            <version>1.18.24</version>\n                        </path>\n                        <path>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok-mapstruct-binding</artifactId>\n                            <version>1.18.24</version>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);